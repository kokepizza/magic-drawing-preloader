/* COMENTARIOS */

/*

he creado una web sencilla sobre arquitectura brutalista usando algunos de los conceptos que vimos en clase:

1) animation-timeline: Lo usé para que, al principio, solo veas el texto y la navegación. cuando haces scroll,
el contenido empieza a aparecer poco a poco. todo esto se hace con la animación scrollFadeIn, que ajusta la
opacidad mientras hacer scroll.

2) :has(): usé esta pseudoclase para darle un toque personalizado a las secciones que tienen un h3. si una
section.section tiene un h3 cambio el fondo, el color del texto y ajusto el padding del h3 dentro de ella.

3) unidades relativas de container: en la cuadrícula (grid), usé unidades basadas en el tamaño del contenedor
(cqw y cqh). el espacio entre los elementos es el 2% del ancho del contenedor principal (section.section);
y el margen en los elementos .building es el 5% de la altura del contenedor (div.grid). esto hace que el
diseño sea responsive y se ajuste al tamaño del contenedor.

4) view transition API: implementé esta API en el header para darle una animación solo al título de cada página.
la transición se activa cuando cambias de una página a otra, lo que hace que la experiencia sea más fluida. el
contenido de las páginas tiene la animación de animation-timeline, pero en el header uso view transition para
una animación más controlada.

-> para futuros proyectos le veo mucho potencial sobretodo a las propiedades de animation-timeline y view transition.
   creo que son herramientas MUY potentes para darle vida y personalidad a una web y que los usuarios tengan ganas
   de interactuar con ella. también me gustaría explorar el color-mix aunque esta página no lo pedía.

!!! AVISO: no abrir con safari ya que no soporta el animation-timeline y no se verá la animación al hacer scroll.

*/


/* VARIABLES */

:root {
    --color-bg: #f2f2f2;
    --color-text: #111111;
    --color-accent: #777777;
    --spacing: 1.5rem;
}

/* GENERAL */

body {
    font-family: 'Helvetica Neue', Arial, sans-serif;
    background-color: var(--color-bg);
    color: var(--color-text);
    line-height: 1.6;
    padding: var(--spacing);
}

::selection {
    background-color: var(--color-text);
    color: var(--color-bg);
}

/* CUSTOM  */

h1, h2, h3 {
    font-family: 'Space Grotesk', sans-serif;
    text-transform: uppercase;
    line-height: 1;
    letter-spacing: -0.03em;
}

h1 {
    font-size: 3.5rem;
    padding: 3rem 0;
    margin: 0;
}

h2, h3 {
    font-size: 2.5rem;
    padding-bottom: 1.5rem;
    margin: 0;
}

header {
    padding-bottom: var(--spacing);
    border-bottom: 4px solid var(--color-text);
    margin: 0;
}

.navigation {
    padding: 2rem 0;
    margin: 0;
}

.navigation ul {
    list-style: none;
    display: flex;
    flex-direction: column;
    gap: 1rem;
    padding: 0;
    margin: 0;
}

.nav-link {
    text-decoration: none;
    color: var(--color-text);
    font-weight: bold;
    font-size: 1.2rem;
    padding: 0.5rem 0;
}

.nav-link:hover {
    border-bottom-color: var(--color-text);
    color: white;
    background-color: var(--color-text);
}

.section {
    padding: 4rem 0 0;
    margin: 0;
    border-top: 2px solid var(--color-accent);
    animation: scrollFadeIn linear;
    animation-timeline: scroll(root);
}

/* ANIMATION TIMELINE */

@keyframes scrollFadeIn {
    0% {
        opacity: 0;
    }
    40% {
        opacity: 1;
    }
}

.section:has(h3) {
    background-color: var(--color-text);
    color: var(--color-bg);
    padding: 0;

    h3 {
        padding: var(--spacing);
    }
}

.grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 2cqw; /* 2% del width de su container padre */
    padding-top: 2rem;
    margin: 0;
}

.building {
    background-color: var(--color-text);
    padding: 1rem;
    margin: 0 0 5cqh 0; /* 5% del height del container padre */
}

.building img {
    width: 100%;
    height: auto;
    display: block;
    object-fit: cover;
    aspect-ratio: 1 / 1;
}

.building p {
    color: var(--color-bg);
    padding-top: 0.5rem;
    margin: 0;
    font-size: 0.9rem;
    font-weight: bold;

    &::selection {
        background-color: var(--color-bg);
        color: var(--color-text);
    }
}

.manifesto-text {
    font-size: 1.2rem;
    font-weight: bold;
}

.manifesto-text p {
    padding: var(--spacing);
    margin: 0;
    border-top: 3px solid var(--color-bg);
}

footer {
    padding-top: 4rem;
    margin: 0;
    border-top: 4px solid var(--color-text);
    text-align: center;
    font-size: 0.8rem;
}

/* VIEW TRANSITIO API */

@view-transition {
    navigation: auto;
}

header {
    view-transition-name: header;
}

::view-transition-old(header) {
    opacity: 1;
    animation: fadeOut .5s;
}

::view-transition-new(header) {
    opacity: 1;
    animation: fadeIn .5s;
}

@keyframes fadeOut {
    0% {opacity: 1; transform: translateX(0);}
    100% {opacity: 0; transform: translateX(1000px);}
}

@keyframes fadeIn {
    0% {opacity: 0; transform: translateX(1000px);}
    100% {opacity: 1; transform: translateX(0);}
}



/* TABLET */
@media (min-width: 768px) {
    :root {
        --spacing: 2rem;
    }

    h1 {
        font-size: 5rem;
    }

    h2, h3 {
        font-size: 3.5rem;
    }
    
    .navigation ul {
        flex-direction: row;
        gap: 2rem;
    }
    
    .grid {
        grid-template-columns: repeat(2, 1fr);
    }
}

/* DESKTOP */
@media (min-width: 1024px) {
    :root {
        --spacing: 3rem;
    }

    h1 {
        font-size: 8rem;
    }

    h2, h3 {
        font-size: 5rem;
    }

    .grid {
        grid-template-columns: repeat(3, 1fr);
    }
    
    .section {
        padding: 6rem 0 0;
    }
    
    .navigation ul {
        justify-content: flex-end;
        gap: 3rem;
    }
}
